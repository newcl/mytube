kind: pipeline
type: docker
name: mytube-pipeline

platform:
  os: linux
  arch: amd64

steps:
  # Test stage
  - name: test-backend
    image: python:3.12-slim
    commands:
      - cd backend
      - pip install -r requirements.txt
      - python -m pytest tests/ || true  # Run tests if they exist
    when:
      event:
        - push
        - pull_request

  - name: test-frontend
    image: node:18-alpine
    commands:
      - cd frontend
      - npm ci
      - npm run build
      - npm test || true  # Run tests if they exist
    when:
      event:
        - push
        - pull_request

  # Build stage - Backend Base
  - name: build-backend-base
    image: plugins/docker
    settings:
      registry: ghcr.io
      repo: ghcr.io/newcl/mytube-backend-base
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:8}
      dockerfile: backend/Dockerfile.base
      context: backend
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    when:
      event:
        - push
        - tag

  - name: build-backend-fastapi
    image: plugins/docker
    settings:
      registry: ghcr.io
      repo: ghcr.io/newcl/mytube-backend-fastapi
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:8}
      dockerfile: backend/Dockerfile.fastapi
      context: backend
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    depends_on:
      - build-backend-base
    when:
      event:
        - push
        - tag

  - name: build-backend-huey
    image: plugins/docker
    settings:
      registry: ghcr.io
      repo: ghcr.io/newcl/mytube-backend-huey
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:8}
      dockerfile: backend/Dockerfile.huey
      context: backend
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    depends_on:
      - build-backend-base
    when:
      event:
        - push
        - tag

  - name: build-frontend
    image: plugins/docker
    settings:
      registry: ghcr.io
      repo: ghcr.io/newcl/mytube-frontend
      tags:
        - latest
        - ${DRONE_COMMIT_SHA:0:8}
      dockerfile: frontend/Dockerfile
      context: frontend
      build_args:
        - VITE_BACKEND_URL=https://mytube.elladali.com
      username:
        from_secret: DOCKER_USERNAME
      password:
        from_secret: DOCKER_PASSWORD
    when:
      event:
        - push
        - tag

  - name: update-helm-chart
    image: alpine/git
    commands:
      - apk add --no-cache yq
      - git config user.name "Drone CI"
      - git config user.email "drone@example.com"
      - git clone https://${GITHUB_TOKEN}@github.com/newcl/mytube.git /tmp/mytube-repo
      - cd /tmp/mytube-repo
      - git checkout main
      - |
        # Update image tags for all three services with the commit SHA
        yq e '.frontend.image.tag = "${DRONE_COMMIT_SHA:0:8}"' -i k8s/mytube/values.yaml
        yq e '.fastapi.image.tag = "${DRONE_COMMIT_SHA:0:8}"' -i k8s/mytube/values.yaml
        yq e '.huey.image.tag = "${DRONE_COMMIT_SHA:0:8}"' -i k8s/mytube/values.yaml
      - git add k8s/mytube/values.yaml
      - git commit -m "CI: Update mytube images to ${DRONE_COMMIT_SHA:0:8}"
      - git push origin main
    depends_on:
      - build-frontend
      - build-backend-fastapi
      - build-backend-huey
    when:
      event:
        - push
        - tag

# Trigger conditions
trigger:
  branch:
    - main
    - master
    - develop
  event:
    - push
    - pull_request
    - tag 