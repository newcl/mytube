{{- if .Values.redis.enabled }}
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Values.global.namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.global.storageClass }}
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Release.Name }}-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Release.Name }}-redis
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-redis
    spec:
      containers:
      - name: redis
        image: {{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}
        imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.redis.resources | nindent 12 }}
      volumes:
      - name: redis-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-redis
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-redis
  namespace: {{ .Values.global.namespace }}
spec:
  selector:
    app: {{ .Release.Name }}-redis
  ports:
  - port: {{ .Values.redis.service.port }}
    targetPort: 6379
  type: ClusterIP
{{- end }} 